@model Tabang_Hub.Utils.Lists

@{
    ViewBag.Title = "EventsManagement";
    Layout = "~/Views/Shared/_Organization.cshtml";
}

<style>
    .navbar-nav .nav-link {
        padding-left: 10px;
        padding-right: 10px;
        white-space: nowrap;
        font-size: 14px;
    }

    .content-section {
        display: none;
    }

        .content-section.active {
            display: block;
        }

    .navbar-center {
        display: flex;
        justify-content: center;
        width: 100%;
    }

    .skills-container {
        margin-top: 10px;
    }

    .skill-button {
        margin: 2px;
    }

    .added-skills {
        margin-top: 10px;
        display: flex;
        flex-wrap: wrap;
    }

    .skill-tag {
        display: inline-flex;
        align-items: center;
        margin: 2px;
        padding: 5px 10px;
        background-color: #007bff;
        color: white;
        border-radius: 15px;
        cursor: pointer;
    }

        .skill-tag .remove-skill {
            margin-left: 5px;
            font-weight: bold;
            cursor: pointer;
        }

    .preview-container {
        display: flex;
        flex-wrap: wrap;
        margin-top: 10px;
    }

    .preview-image {
        margin: 5px;
        max-width: 100px;
        max-height: 100px;
    }
</style>

<div class="container">
    <!-- Sub Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
        <div class="container">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse navbar-center" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item"><a class="nav-link" href="#dashboard" onclick="showSection('dashboard')">Dashboard</a></li>
                    <li class="nav-item"><a class="nav-link" href="#event-creation" onclick="showSection('event-creation')">Event Creation</a></li>
                    <li class="nav-item"><a class="nav-link" href="#event-list" onclick="showSection('event-list')">Event List</a></li>
                    <li class="nav-item"><a class="nav-link" href="#scheduling-calendar" onclick="showSection('scheduling-calendar')">Scheduling and Calendar</a></li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Content Sections -->
    <div class="container">
        <!-- Overview/Dashboard -->
        <div id="dashboard" class="mb-4 content-section active">
            <div class="card-header">Dashboard</div>
            <div class="card-body">
                <p>Overview of all programs and events, including key metrics and upcoming events.</p>
            </div>
        </div>

        <!-- Event Creation -->
        <div id="event-creation" class="mb-4 content-section">
            <div class="card-header">Event Creation</div>
            <div class="card-body">
                <form action="/Organization/CreateEvents" method="post" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="CreateEvents_eventTitle" class="form-label">Event Title</label>
                        <input type="text" class="form-control" id="CreateEvents_eventTitle" name="CreateEvents.eventTitle" placeholder="Enter event title">
                    </div>
                    <div class="mb-3">
                        <label for="CreateEvents_eventDescription" class="form-label">Event Description</label>
                        <textarea class="form-control" id="CreateEvents_eventDescription" name="CreateEvents.eventDescription" rows="4" placeholder="Enter event description"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="CreateEvents_maxVolunteer" class="form-label">Maximum Volunteers</label>
                        <input type="number" class="form-control" id="CreateEvents_maxVolunteer" name="CreateEvents.maxVolunteer" placeholder="Enter maximum number of volunteers">
                    </div>
                    <div class="mb-3 row">
                        <div class="col">
                            <label for="CreateEvents_dateStart" class="form-label">Start Date and Time</label>
                            <input type="datetime-local" class="form-control" id="CreateEvents_dateStart" name="CreateEvents.dateStart">
                        </div>
                        <div class="col">
                            <label for="CreateEvents_dateEnd" class="form-label">End Date and Time</label>
                            <input type="datetime-local" class="form-control" id="CreateEvents_dateEnd" name="CreateEvents.dateEnd">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="CreateEvents_location" class="form-label">Location</label>
                        <input type="text" class="form-control" id="CreateEvents_location" name="CreateEvents.location" placeholder="Enter location">
                    </div>
                    <div class="mb-3">
                        <label>Volunteer Skills Requirements</label>
                        <div class="added-skills" id="added-skills"></div>
                    </div>
                    <div class="skills-container">
                        <button type="button" class="btn btn-outline-primary skill-button" onclick="addSkill('Mason')">Mason</button>
                        <button type="button" class="btn btn-outline-primary skill-button" onclick="addSkill('Panday')">Panday</button>
                        <button type="button" class="btn btn-outline-primary skill-button" onclick="addSkill('GRO')">GRO</button>
                        <button type="button" class="btn btn-outline-primary skill-button" onclick="addSkill('Mangawatay')">Mangawatay</button>
                        <button type="button" class="btn btn-outline-primary skill-button" onclick="addSkill('Matcho Dancer')">Matcho Dancer</button>
                    </div>
                    <div class="mb-3">
                        <label for="CreateEvents_uploadImage" class="form-label">Upload Images</label>
                        <input type="file" class="form-control" id="CreateEvents_uploadImage" name="images" multiple onchange="previewImages()">
                        <div class="preview-container" id="image-preview"></div>
                    </div>
                    <button type="submit" class="btn btn-primary">Create Event</button>
                </form>
            </div>
        </div>

        <!-- Event List -->
        <div id="event-list" class="mb-4 content-section">
            <div class="card-header">Event List</div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr class="text-nowrap text-center">
                                <th class="small">Event Name</th>
                                <th class="small">Description</th>
                                <th class="small">Maximum Volunteers</th>
                                <th class="small">Date Started</th>
                                <th class="small">Date Ended</th>
                                <th class="small">Location</th>
                                <th class="small">Total Image</th>
                                <th class="small">Total Skills</th>
                                <th class="small">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var list in Model.listOfEvents)
                            {
                                <tr class="text-center" data-href="@Url.Action("Details", "Organization", new { id = list.Event_Id })" style="cursor: pointer;">
                                    <td>@list.Title</td>
                                    <td>@list.Description</td>
                                    <td>@list.Maximum_Volunteer</td>
                                    <td>@list.Date_Started</td>
                                    <td>@list.Date_Ended</td>
<<<<<<< Updated upstream
                                    <td>@list.Location</td>
                                    <td>@list.Image_Id</td>
                                    <td>@list.Skill_Id</td>
=======
                                    <td>@list.location</td>
                                    <td>@list.Total_Image</td>
                                    <td>@list.Total_Skills</td>
>>>>>>> Stashed changes
                                    <td>
                                        <a href="@Url.Action("Delete", "Event", new { id = list.Event_Id })" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this event?');">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var rows = document.querySelectorAll('tr[data-href]');
                rows.forEach(row => {
                    row.addEventListener('click', function () {
                        window.location.href = this.getAttribute('data-href');
                    });
                });
            });
        </script>







        <!-- Scheduling and Calendar -->
        <div id="scheduling-calendar" class="mb-4 content-section">
            <div class="card-header">Scheduling and Calendar</div>
            <div class="card-body">
                <p>Manage the timeline of programs and events with a calendar view, conflict detection, and reminders.</p>
            </div>
        </div>
    </div>
</div>

<script>
    function showSection(sectionId) {
        // Hide all sections
        document.querySelectorAll('.content-section').forEach(section => {
            section.classList.remove('active');
        });

        // Show the selected section
        document.getElementById(sectionId).classList.add('active');
    }

    function addSkill(skill) {
        const addedSkillsContainer = document.getElementById('added-skills');

        // Check if the skill is already added
        if (Array.from(addedSkillsContainer.children).some(child => child.textContent.includes(skill))) {
            return;
        }

        // Create skill tag
        const skillTag = document.createElement('span');
        skillTag.className = 'skill-tag btn btn-outline-secondary';
        skillTag.textContent = skill;

        // Create hidden input for the skill
        const skillInput = document.createElement('input');
        skillInput.type = 'hidden';
        skillInput.name = 'Skills';
        skillInput.value = skill;

        // Append the hidden input and skill tag
        skillTag.appendChild(skillInput);

        // Create remove button
        const removeButton = document.createElement('span');
        removeButton.className = 'remove-skill';
        removeButton.textContent = ' x';
        removeButton.onclick = function () {
            removeSkill(skillTag);
        };

        skillTag.appendChild(removeButton);
        addedSkillsContainer.appendChild(skillTag);
    }

    function removeSkill(skillTag) {
        const addedSkillsContainer = document.getElementById('added-skills');
        addedSkillsContainer.removeChild(skillTag);
    }

    function previewImages() {
        const previewContainer = document.getElementById('image-preview');
        previewContainer.innerHTML = ''; // Clear previous previews
        const files = document.getElementById('CreateEvents_uploadImage').files;

        Array.from(files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function (e) {
                const img = document.createElement('img');
                img.src = e.target.result;
                img.className = 'preview-image';
                previewContainer.appendChild(img);
            };
            reader.readAsDataURL(file);
        });
    }
</script>
