@model Tabang_Hub.Utils.Lists
@{
    ViewBag.Title = "Message";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Css/message.css" rel="stylesheet" />
<div class="message-body">
    <div class="chat-list">
        <div class="chat-item-head">
            <h2>Group Chats</h2>
        </div>
        @foreach (var gc in Model.listOfGc)
        {
            <div class="chat-item" onclick="selectGroup('@gc.groupChatId')">
                <img src="https://via.placeholder.com/40" alt="Profile">
                <span>@gc.eventTitle</span>
                <input type="hidden" value="@gc.groupChatId" id="groupId" />
                <input type="hidden" value="@gc.userId" id="userId" />
            </div>
        }
    </div>

    <!-- Chat area for displaying messages -->
    <div class="chat-area">
        <div class="messages"></div>
        <div class="message-input">
            <input type="text" id="message" placeholder="Type a message">
            <button id="sendmessage">Send</button>
        </div>
    </div>
</div>

<script type="text/javascript">

    var currentUserId = '@ViewBag.UserId'.toString();
    console.log("currentUserId: ", currentUserId);

    var selectedGcID = null;
    function selectGroup(groupId) {
        console.log("Group ID: ", groupId);

        selectedGcID = groupId;
    }

    $(function () {
        // Declare a proxy to reference the hub
        var chat = $.connection.chatHub;
        console.log("SELECTED GC: ", selectedGcID);

        // Function to display a message (appends to the chat-area)
        chat.client.broadcastMessage = function (userName, senderId, message, groupId) {
            console.log("senderId: ", senderId, "currentUserId: ", currentUserId, "groupId: ", groupId);
            var messageClass = senderId.toString() === currentUserId ? 'sent' : 'received';

            // Create message HTML with conditional userName display
            var messageHtml = '<div class="message-container ' + messageClass + '">';

            // Only display the name if the message is from another user (i.e., received)
            if (messageClass === 'received') {
                messageHtml += '<strong class="user-name">' + userName + '</strong>'; // Display the user's name above the message
            }

            messageHtml += '<div class="message ' + messageClass + '"><span>' + htmlEncode(message) + '</span></div>';
            messageHtml += '</div>';

            // Append the message to the chat area
            $('.messages').append(messageHtml);

            // Auto-scroll to the bottom after adding the message
            $('.messages').scrollTop($('.messages')[0].scrollHeight);
        };

        // Function to load all previous messages when the page loads
        chat.client.loadMessages = function (messages) {
            $('.messages').empty(); // Clear the current messages
            $.each(messages, function (index, message) {
                var messageClass = message.userId.toString() === currentUserId ? 'sent' : 'received';

                // Create message HTML with conditional userName display
                var messageHtml = '<div class="message-container ' + messageClass + '">';

                // Only display the name if the message is from another user (i.e., received)
                if (messageClass === 'received') {
                    messageHtml += '<strong class="user-name">' + message.userName + '</strong>'; // Display the user's name above the message
                }

                messageHtml += '<div class="message ' + messageClass + '"><span>' + htmlEncode(message.message) + '</span></div>';
                messageHtml += '</div>';

                // Append the message to the chat area
                $('.messages').append(messageHtml);
            });

            // Auto-scroll to the bottom after loading messages
            $('.messages').scrollTop($('.messages')[0].scrollHeight);
        };

        // Start the SignalR connection
        $.connection.hub.start().done(function () {
            // Load existing messages for the group when the connection starts
            chat.server.getAllMessages($('#groupId').val());

            // Send a message when the send button is clicked
            $('#sendmessage').click(function () {
                var message = $('#message').val();
                if (message) {
                    chat.server.send(document.getElementById('userId').value, $('#groupId').val(), message);
                    $('#message').val('').focus(); // Clear the input and refocus
                }
            });
        });

        // Utility function to encode HTML special characters
        function htmlEncode(value) {
            return $('<div />').text(value).html();
        }
    });
</script>


