@model Tabang_Hub.Utils.Lists
@if (Model.userAccount != null && Model.userAccount.roleId == 2)
{
    ViewBag.Title = "Message";
    Layout = "~/Views/Shared/_Organization.cshtml";
}
else
{
    ViewBag.Title = "Message";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Css/message.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
    body {
        padding-top: 100px;
        overflow-y: hidden;
    }
</style>
<div class="message-body">
    <div class="chat-list" id="chatList">
        <div class="chat-item-head">
            <h2>Group Chat</h2>
        </div>
        @if (Model.listOfGc == null || !Model.listOfGc.Any())
        {
            <script type="text/javascript">
                Swal.fire({
                    icon: 'info',
                    title: 'No Group Chats available!',
                    text: 'Group chat will appear if you join an event.',
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '@Url.Action("Index", "Page")';
                    }
                });
            </script>
        }
        else
        {
            foreach (var gc in Model.listOfGc)
            {
                var gcImage = Model.detailsEventImage
                    .Where(m => m.eventId == gc.eventId)
                    .Select(m => m.eventImage)
                    .FirstOrDefault();
                <div class="chat-item" onclick="selectGroup('@gc.groupChatId', '@Url.Content("~/Content/Events/" + gcImage)', '@gc.eventTitle', event)">
                    <img src="@Url.Content("~/Content/Events/" + gcImage)" alt="Profile">
                    <span>@gc.eventTitle</span>
                </div>
            }
        }
    </div>

    <!-- Chat area -->
    <div class="chat-area">
        <div class="chat-header" id="chatHeader">
            <div class="chat-toggle-icon" onclick="toggleChatList()">
                <i class="fas fa-bars"></i> <!-- Replace with your desired icon -->
            </div>

            <img id="chatHeaderImage" src="@Url.Content("~/Content/Images/default-avatar.png")" alt="Group Avatar">
            <span id="chatHeaderTitle">Group Chat</span>
        </div>
        <div class="messages"></div>
        <div class="message-input">
            <input type="text" id="message" placeholder="Aa">
            <button id="sendmessage">
                <i class="fas fa-paper-plane"></i>
            </button>
        </div>
    </div>
</div>


<script type="text/javascript">
    function toggleChatList() {
        var chatList = document.getElementById('chatList');
        var chatArea = document.querySelector('.chat-area');

        if (chatList.classList.contains('show')) {
            chatList.classList.remove('show'); // Hide the chat list
            chatArea.classList.remove('shift'); // Reset chat area position
        } else {
            chatList.classList.add('show'); // Show the chat list
            chatArea.classList.add('shift'); // Shift chat area
        }
    }



    var currentUserId = '@ViewBag.UserId'.toString();
    console.log("currentUserId: ", currentUserId);

    var selectedGcID;
    function selectGroup(groupId, groupImage, groupTitle, event) {
        console.log("Group ID: ", groupId);

        // Update chat header with the selected group's profile image and name
        document.getElementById('chatHeaderImage').src = groupImage;
        document.getElementById('chatHeaderTitle').textContent = groupTitle;

        // Remove 'selected' class from any previously selected item
        $('.chat-item').removeClass('selected');
        $(event.currentTarget).addClass('selected');

        selectedGcID = groupId;

        document.getElementById('message').disabled = false;
        document.getElementById('sendmessage').disabled = false;

        // Start SignalR connection when a group is selected
        $.connection.hub.start().done(function () {
            var chat = $.connection.chatHub;
            console.log(currentUserId);
            // Load existing messages for the selected group
            chat.server.getAllMessages(selectedGcID);

            // Send a message when the send button is clicked
            $('#sendmessage').click(function () {
                var message = $('#message').val();
                if (message) {
                    chat.server.send(currentUserId, selectedGcID, message);
                    $('#message').val('').focus(); // Clear the input and refocus
                }
            });
        });
    }


    $(function () {
        // Declare a proxy to reference the hub
        var chat = $.connection.chatHub;

        // Notify when the group chat does not exist
        chat.client.groupChatNotFound = function () {
            Swal.fire({
                icon: 'error',
                title: 'Group Chat Not Found!',
                text: 'The group chat you are trying to access does not exist.',
                allowOutsideClick: false,
                allowEscapeKey: false,
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#message').val(''); // Clear the message input
                    location.reload();
                }
            });
        };


        if (selectedGcID == null) {
            document.getElementById('message').disabled = true;
            document.getElementById('sendmessage').disabled = true;
        }
        // Function to display a message (appends to the chat-area)
        chat.client.broadcastMessage = function (userName, senderId, message, groupId) {
            if (groupId.toString() == selectedGcID.toString()) {
                var messageClass = senderId.toString() === currentUserId ? 'sent' : 'received';

                var messageHtml = '<div class="message-container ' + messageClass + '">';
                if (messageClass === 'received') {
                    messageHtml += '<strong class="user-name">' + userName + '</strong>';
                }
                messageHtml += '<div class="message ' + messageClass + '"><span>' + htmlEncode(message) + '</span></div>';
                messageHtml += '</div>';

                // Append the message to the chat area
                $('.messages').append(messageHtml);

                // Auto-scroll to the bottom after adding the message
                $('.messages').scrollTop($('.messages')[0].scrollHeight);

                console.log("Displayed message in group: " + groupId);
            } else {
                console.log("Message not displayed. Current group ID: " + selectedGcID + ", Message group ID: " + groupId);
            }
        };

        // Function to load all previous messages when the page loads
        chat.client.loadMessages = function (messages) {
            $('.messages').empty(); // Clear the current messages
            $.each(messages, function (index, message) {
                var messageClass = message.userId.toString() === currentUserId ? 'sent' : 'received';

                var messageHtml = '<div class="message-container ' + messageClass + '">';
                if (messageClass === 'received') {
                    messageHtml += '<strong class="user-name">' + message.userName + '</strong>';
                }
                messageHtml += '<div class="message ' + messageClass + '"><span>' + htmlEncode(message.message) + '</span></div>';
                messageHtml += '</div>';

                // Append the message to the chat area
                $('.messages').append(messageHtml);
            });

            // Auto-scroll to the bottom after loading messages
            $('.messages').scrollTop($('.messages')[0].scrollHeight);
        };

        // Utility function to encode HTML special characters
        function htmlEncode(value) {
            return $('<div />').text(value).html();
        }
    });
</script>