@model Tabang_Hub.Utils.Lists

@{
    ViewBag.Title = "VolunteerAccounts";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<div class="container">
    <div class="mb-3 d-flex justify-content-between align-items-center">
        <div>
            <button type="button" class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#createAccountModal">Create Account</button>
        </div>
        <div class="d-flex">
            <select id="sortDropdown" class="form-select me-2 w-auto">
                <option value="newest">Newest</option>
                <option value="oldest">Oldest</option>
            </select>
        </div>
    </div>

    <div class="active-accounts">
        <h5 class="text-start">Active Accounts</h5>
        <div class="table-responsive border rounded p-2 mb-5" style="min-height: 300px; max-height: 300px; overflow-y: auto;">
            <table class="table table-striped table-hover" id="activeAccountsTable">
                <thead class="table-dark">
                    <tr class="text-nowrap text-center">
                        <th class="small">Last Name</th>
                        <th class="small">First Name</th>
                        <th class="small">Email</th>
                        <th class="small">Gender</th>
                        <th class="small">Contact No.</th>
                        <th class="small">Availability</th>
                        <th class="small">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var list in Model.volunteerAccounts.OrderByDescending(v => v.User_Id))
                    {
                        if (list.Status == 1)
                        {
                            <tr class="text-center volunteer-row" data-user-id="@list.User_Id" style="cursor: pointer;">
                                <td>@list.Last_Name</td>
                                <td>@list.First_Name</td>
                                <td>@list.Email</td>
                                <td>@list.Gender</td>
                                <td>@list.Contact_No</td>
                                <td>@list.Availability</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger delete-button" data-user-id="@list.User_Id">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="not-active-accounts">
        <h5 class="text-start">None-Active Accounts</h5>
        <div class="table-responsive border rounded p-2" style="min-height: 300px; max-height: 300px; overflow-y: auto;">
            <table class="table table-striped table-hover" id="notActiveAccountsTable">
                <thead class="table-dark">
                    <tr class="text-nowrap text-center">
                        <th class="small">Last Name</th>
                        <th class="small">First Name</th>
                        <th class="small">Email</th>
                        <th class="small">Gender</th>
                        <th class="small">Contact No.</th>
                        <th class="small">Availability</th>
                        <th class="small">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var list in Model.volunteerAccounts.OrderByDescending(v => v.User_Id))
                    {
                        if (list.Status == 0)
                        {
                            <tr class="text-center volunteer-row" data-user-id="@list.User_Id" style="cursor: pointer;">
                                <td>@list.Last_Name</td>
                                <td>@list.First_Name</td>
                                <td>@list.Email</td>
                                <td>@list.Gender</td>
                                <td>@list.Contact_No</td>
                                <td>@list.Availability</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger delete-button" data-user-id="@list.User_Id">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="createAccountModal" tabindex="-1" aria-labelledby="createAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createAccountModalLabel">Create a New Account</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("Register", "Admin")" method="post" enctype="multipart/form-data" class="form-horizontal">
                    <div class="mb-3">
                        <label for="email" class="form-label">Email Address</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                            <input type="email" class="form-control" id="email" name="Email" placeholder="Enter Your Email" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input type="password" class="form-control" id="password" name="Password" placeholder="Enter Password" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input type="password" class="form-control" id="confirmPassword" name="ConfirmPass" placeholder="Confirm Password" required>
                        </div>
                    </div>
                    <div class="d-flex justify-content-center">
                        <button class="btn btn-danger" type="submit">Register</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(document).ready(function () {
        // Event listener for volunteer row click to redirect to details page
        $('.volunteer-row').click(function () {
            var userId = $(this).data('user-id');
            window.location.href = '@Url.Action("VolunteerDetails", "Admin")' + '?userId=' + userId;
        });

        // Prevent row click when delete button is clicked
        $('.delete-button').click(function (event) {
            event.stopPropagation();
            var userId = $(this).data('user-id');

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteUser", "Admin")',
                        type: 'POST',
                        data: { userId: userId },
                        success: function(response) {
                            Swal.fire(
                                'Deleted!',
                                'The account has been deleted.',
                                'success'
                            ).then(() => {
                                location.reload(); // Reload the page to update the table
                            });
                        },
                        error: function(xhr, status, error) {
                            Swal.fire(
                                'Error!',
                                'There was an error deleting the account.',
                                'error'
                            );
                        }
                    });
                }
            });
        });

        // Event listener for sorting by Newest or Oldest
        $('#sortDropdown').change(function () {
            var sortOrder = $(this).val();
            sortTables(sortOrder);
        });

        function sortTables(order) {
            ['#activeAccountsTable', '#notActiveAccountsTable'].forEach(function (tableId) {
                var rows = $(tableId + ' tbody tr').get();
                rows.sort(function (a, b) {
                    var keyA = parseInt($(a).data('user-id'));
                    var keyB = parseInt($(b).data('user-id'));

                    if (order === 'newest') {
                        return keyB - keyA;
                    } else {
                        return keyA - keyB;
                    }
                });
                $.each(rows, function (index, row) {
                    $(tableId + ' tbody').append(row);
                });
            });
        }
    });
</script>
