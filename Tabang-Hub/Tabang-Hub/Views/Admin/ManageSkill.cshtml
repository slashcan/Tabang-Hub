@model Tabang_Hub.Utils.Lists

@{
    ViewBag.Title = "ManageSkill";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<div class="container mt-4">
    <div class="mb-3 d-flex justify-content-between">
        <button type="button" class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#addSkillModal">Add Skill</button>
        <input type="text" id="searchSkill" class="form-control w-25" placeholder="Search by skill name" />
    </div>
    <div class="active-accounts">
        <h5 class="text-start">Skills</h5>
        <div class="table-responsive border rounded p-2 mb-5" style="max-height: 600px; overflow-y: auto;">
            <table class="table table-striped table-hover" id="skillsTable">
                <thead class="table-dark">
                    <tr class="text-nowrap text-center">
                        <th class="small">Skill Name</th>
                        <th class="small">Skill Image</th>
                        <th class="small">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var skill in Model.allSkill)
                    {
                        <tr class="text-center skill-row">
                            <td class="skill-name">@skill.skillName</td>
                            <td><img src="@Url.Content($"~/Content/SkillImages/{skill.skillImage}")" alt="Skill Image" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" /></td>
                            <td>
                                <button type="button" class="btn btn-sm btn-danger delete-button" data-skill-id="@skill.skillId">Delete</button>
                            </td>
                        </tr>
                    }
                    @if (!Model.allSkill.Any())
                    {
                        <tr>
                            <td colspan="3" class="text-center">No skills available.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add Skill Modal -->
<div class="modal fade" id="addSkillModal" tabindex="-1" aria-labelledby="addSkillModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSkillModalLabel">Add a New Skill</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("AddSkills", "Admin")" method="post" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="skillName" class="form-label">Skill Name</label>
                        <input type="text" class="form-control" id="skillName" name="SkillName" placeholder="Enter Skill Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="skillImage" class="form-label">Skill Image</label>
                        <input type="file" class="form-control" id="skillImage" name="SkillImage" accept="image/*" required>
                    </div>
                    <div class="d-flex justify-content-center">
                        <button type="submit" class="btn btn-success">Add Skill</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>

      // Search functionality
    $(document).ready(function () {
        $('#searchSkill').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('#skillsTable tbody tr').filter(function () {
                $(this).toggle($(this).find('.skill-name').text().toLowerCase().indexOf(value) > -1);
            });
        });

        // Event listener for form submission and delete button logic
        $('#addSkillModal form').submit(function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Create FormData object to handle file uploads and form data
            var formData = new FormData(this);

            $.ajax({
                url: $(this).attr('action'), // URL defined in the form's action attribute
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: response.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            location.reload(); // Reload the page after the alert is confirmed
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });

        // Event listener for delete buttons
        $('.delete-button').click(function (event) {
            event.stopPropagation(); // Prevent the row click event
            var skillId = $(this).data('skill-id');

            // Confirmation dialog before deletion
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteSkill")',
                        type: 'POST',
                        data: { skillId: skillId },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire(
                                    'Deleted!',
                                    'The skill has been deleted.',
                                    'success'
                                ).then(() => {
                                    location.reload(); // Optionally reload the page or remove the row from the table
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'Failed to delete the skill: ' + response.message,
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'Error!',
                                'An error occurred. Please try again.',
                                'error'
                            );
                        }
                    });
                }
            });
        });
    });
</script>