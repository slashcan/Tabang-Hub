@model Tabang_Hub.Utils.Lists

@{
    ViewBag.Title = "OrganizationAccounts";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<div class="container">
    <div class="mb-3 d-flex justify-content-between align-items-center">
        <div>
            <button type="button" class="btn btn-success me-2" data-bs-toggle="modal" data-bs-target="#createAccountModal">Create Account</button>
            <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#pendingApprovalModal">Pending Approval</button>
        </div>
        <div class="d-flex">
            <select id="sortDropdown" class="form-select me-2 w-auto">
                <option value="newest">Newest</option>
                <option value="oldest">Oldest</option>
            </select>
        </div>
    </div>

    <div class="active-accounts">
        <h5 class="text-start">Active Accounts</h5>
        <div class="table-responsive border rounded p-2 mb-5" style="min-height: 300px; max-height: 300px; overflow-y: auto;">
            <table class="table table-striped table-hover" id="activeAccountsTable">
                <thead class="table-dark">
                    <tr class="text-nowrap text-center">
                        <th class="small">Org. Name</th>
                        <th class="small">Email</th>
                        <th class="small">Org. Type</th>
                        <th class="small">Contact No.</th>
                        <th class="small">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var list in Model.organizationAccounts.OrderByDescending(o => o.User_Id))
                    {
                        if (list.Status == 1) // Active accounts
                        {
                            <tr class="text-center organization-row" data-org-id="@list.User_Id" style="cursor: pointer;">
                                <td>@list.Org_Name</td>
                                <td>@list.Email</td>
                                <td>@list.Org_Type</td>
                                <td>@list.Contact_No</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger delete-button" data-org-id="@list.User_Id">Deactivate</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="not-active-accounts">
        <h5 class="text-start">None-Active Accounts</h5>
        <div class="table-responsive border rounded p-2" style="min-height: 300px; max-height: 300px; overflow-y: auto;">
            <table class="table table-striped table-hover" id="notActiveAccountsTable">
                <thead class="table-dark">
                    <tr class="text-nowrap text-center">
                        <th class="small">Org. Name</th>
                        <th class="small">Email</th>
                        <th class="small">Org. Type</th>
                        <th class="small">Contact No.</th>
                        <th class="small">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var list in Model.organizationAccounts.OrderByDescending(o => o.User_Id))
                    {
                        if (list.Status == 0) // Non-active accounts
                        {
                            <tr class="text-center organization-row" data-org-id="@list.User_Id" style="cursor: pointer;">
                                <td>@list.Org_Name</td>
                                <td>@list.Email</td>
                                <td>@list.Org_Type</td>
                                <td>@list.Contact_No</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-success reactivate-button" data-org-id="@list.User_Id">Reactivate</button>
                                    <button type="button" class="btn btn-sm btn-danger delete-button" data-org-id="@list.User_Id">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

<!-- Pending Approval Modal -->
<div class="modal fade" id="pendingApprovalModal" tabindex="-1" aria-labelledby="pendingApprovalModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="pendingApprovalModalLabel">Pending Approval Accounts</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead class="table-dark">
                            <tr class="text-center">
                                <th>Org. Name</th>
                                <th>Email</th>
                                <th>Org. Type</th>
                                <th>Contact No.</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var list in Model.organizationAccounts)
                            {
                                if (list.Status == 3)
                                {
                                    <tr class="text-center">
                                        <td>@list.Org_Name</td>
                                        <td>@list.Email</td>
                                        <td>@list.Org_Type</td>
                                        <td>@list.Contact_No</td>
                                        <td>
                                            <a href="@Url.Action("ToConfirm", "Admin", new { userId = list.User_Id })" class="btn btn-sm btn-success">View</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createAccountModal" tabindex="-1" aria-labelledby="createAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createAccountModalLabel">Create a New Account</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="@Url.Action("RegisterOrg", "Admin")" method="post" enctype="multipart/form-data" class="form-horizontal">
                    <div class="mb-3">
                        <label for="email" class="form-label">Email Address</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                            <input type="email" class="form-control" id="email" name="Email" placeholder="Enter Your Email" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input type="password" class="form-control" id="password" name="Password" placeholder="Enter Password" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input type="password" class="form-control" id="confirmPassword" name="ConfirmPass" placeholder="Confirm Password" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="imageUpload1" class="form-label">Valid ID 1</label>
                        <input class="form-control" type="file" id="imageUpload1" name="picture1" accept="image/*" onchange="previewImage(event, 'imagePreview1')">
                        <img id="imagePreview1" class="img-fluid mt-3" src="#" alt="Image Preview 1" style="display:none; max-width: 200px;">
                    </div>
                    <div class="mb-3">
                        <label for="imageUpload2" class="form-label">Valid ID 2</label>
                        <input class="form-control" type="file" id="imageUpload2" name="picture2" accept="image/*" onchange="previewImage(event, 'imagePreview2')">
                        <img id="imagePreview2" class="img-fluid mt-3" src="#" alt="Image Preview 2" style="display:none; max-width: 200px;">
                    </div>
                    <div class="d-flex justify-content-center">
                        <button class="btn btn-danger" type="submit">Register</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(document).ready(function () {
        // Function to preview image before upload
        function previewImage(event, previewId) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById(previewId);
                output.src = reader.result;
                output.style.display = 'block';
            };
            reader.readAsDataURL(event.target.files[0]);
        }

        // Event listener for the preview image function
        $('input[type="file"]').change(function (event) {
            previewImage(event, $(this).next('img').attr('id'));
        });

        // Event listener for deactivate buttons
        $('.delete-button').click(function (event) {
            event.stopPropagation(); // Prevent the row click event
            var userId = $(this).data('org-id');

            // Confirmation dialog before deactivation
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, deactivate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Deactivate")',
                        type: 'POST',
                        data: { userId: userId },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire(
                                    'Deactivated!',
                                    'The account has been deactivated.',
                                    'success'
                                ).then(() => {
                                    // Optionally reload the page or remove the row from the table
                                    location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'Failed to deactivate the account: ' + response.message,
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'Error!',
                                'An error occurred. Please try again.',
                                'error'
                            );
                        }
                    });
                }
            });
        });

        // Event listener for active and non-active table rows (redirect to details)
        $('.organization-row').click(function () {
            var userId = $(this).data('org-id');
            window.location.href = '@Url.Action("OrgProfile", "Admin")' + '?userId=' + userId;
        });

        // Event listener for sorting by Newest or Oldest
        $('#sortDropdown').change(function () {
            var sortOrder = $(this).val();
            sortTables(sortOrder);
        });

        function sortTables(order) {
            ['#activeAccountsTable', '#notActiveAccountsTable'].forEach(function (tableId) {
                var rows = $(tableId + ' tbody tr').get();
                rows.sort(function (a, b) {
                    var keyA = parseInt($(a).data('org-id'));
                    var keyB = parseInt($(b).data('org-id'));

                    if (order === 'newest') {
                        return keyB - keyA;
                    } else {
                        return keyA - keyB;
                    }
                });
                $.each(rows, function (index, row) {
                    $(tableId + ' tbody').append(row);
                });
            });
        }
    });

    // Event listener for reactivate buttons
$('.reactivate-button').click(function (event) {
    event.stopPropagation(); // Prevent the row click event
    var userId = $(this).data('org-id');

    Swal.fire({
        title: 'Reactivate this account?',
        text: "The organization will be reactivated.",
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, reactivate it!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '@Url.Action("Reactivate")',
                type: 'POST',
                data: { userId: userId },
                success: function (response) {
                    if (response.success) {
                        Swal.fire(
                            'Reactivated!',
                            'The account has been reactivated.',
                            'success'
                        ).then(() => {
                            location.reload(); // Reload the page to reflect changes
                        });
                    } else {
                        Swal.fire('Error!', response.message, 'error');
                    }
                },
                error: function () {
                    Swal.fire('Error!', 'An error occurred. Please try again.', 'error');
                }
            });
        }
    });
});
</script>
