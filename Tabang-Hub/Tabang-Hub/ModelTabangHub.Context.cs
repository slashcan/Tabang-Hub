//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tabang_Hub
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class TabangHubEntities : DbContext
    {
        public TabangHubEntities()
            : base("name=TabangHubEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<OrgEventImage> OrgEventImage { get; set; }
        public DbSet<OrgEvents> OrgEvents { get; set; }
        public DbSet<OrgInfo> OrgInfo { get; set; }
        public DbSet<OrgSkillRequirement> OrgSkillRequirement { get; set; }
        public DbSet<OrgValidation> OrgValidation { get; set; }
        public DbSet<ProfilePicture> ProfilePicture { get; set; }
        public DbSet<Role> Role { get; set; }
        public DbSet<Skills> Skills { get; set; }
        public DbSet<UserAccount> UserAccount { get; set; }
        public DbSet<UserDonated> UserDonated { get; set; }
        public DbSet<UserRoles> UserRoles { get; set; }
        public DbSet<VolunteerInfo> VolunteerInfo { get; set; }
        public DbSet<Volunteers> Volunteers { get; set; }
        public DbSet<VolunteerSkill> VolunteerSkill { get; set; }
        public DbSet<vw_ListOfEvent> vw_ListOfEvent { get; set; }
        public DbSet<vw_OrganizationAccounts> vw_OrganizationAccounts { get; set; }
        public DbSet<vw_UserRoles> vw_UserRoles { get; set; }
        public DbSet<vw_VolunteerAccounts> vw_VolunteerAccounts { get; set; }
    
        public virtual int sp_CancelRequest(Nullable<int> eventId, Nullable<int> userId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CancelRequest", eventIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_GetSkills_Result> sp_GetSkills(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSkills_Result>("sp_GetSkills", userIdParameter);
        }
    
        public virtual int sp_LeaveEvent(Nullable<int> eventId, Nullable<int> userId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LeaveEvent", eventIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_OtherEvent_Result> sp_OtherEvent(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OtherEvent_Result>("sp_OtherEvent", userIdParameter);
        }
    
        public virtual ObjectResult<sp_UserListEvent_Result> sp_UserListEvent(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserListEvent_Result>("sp_UserListEvent", userIdParameter);
        }
    }
}
